# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip bump]') && !contains(github.event.head_commit.message, 'nobump/')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Get version from POM
      run: |
        VERSION_PARTS=($(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | tr "-" "\n"))
        echo ${VERSION_PARTS[0]} | tr "." "\n"
        echo ${VERSION_PARTS[1]} | tr -dc '0-9'
        
        echo "PREFIX=(${VERSION_PARTS[0]} | tr "." "\n")" >> $GITHUB_ENV
        echo "SUFFIX=(${VERSION_PARTS[1]} | tr -dc '0-9')" >> $GITHUB_ENV
        
        echo "MAJOR=$((PREFIX[0]))" >> $GITHUB_ENV
        echo "MINOR=$((PREFIX[1]))" >> $GITHUB_ENV
        echo "PATCH=$((PREFIX[2]))" >> $GITHUB_ENV
        echo "BUILD=$((SUFFIX[0]))" >> $GITHUB_ENV

    - name: Setup PR version
#      if: contains(github.ref, '/pull/')
      run: |
        NEW_VERSION="$((MAJOR)).$((MINOR)).$((PATCH))-build$((BUILD+1))"
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
    - name: Update POM Version
      run: |
        echo "New version  is: ${NEW_VERSION}"
        mvn versions:set versions:update-child-modules -DnewVersion=${NEW_VERSION} -DprocessAllModules -DgenerateBackupPoms=false

